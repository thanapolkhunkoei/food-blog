var _redirect_timeout = '../core/core_signin.php?refer=%2fwcm%2fmessages%2flist.php';

_listcontrol.customMouseClickItem = function(obj) {
	var msg_id = $(obj).attr("ref").split(":");
	drawLoadingFullPage();
	var err = "Unable to load the message detail. Please contact your system administrator to solve the problem.";
	$.ajax({
		url: 'msg_data.php',
		data: {'c':'detail', 'i':msg_id[0] },
		type: 'POST', dataType: 'json', timeout: 10000, cache: false,
		error: function(){
			destroyLoadingFullPage();
			Dialog("Error", err, {"Close":close});
			return false;
		},

		success: function(result){
			destroyLoadingFullPage();
			var mailbox = "";
			if(_listcontrol.now_folder == "i") { mailbox = "Inbox - ";}
			else if(_listcontrol.now_folder == "s") { mailbox = "Sent - ";}
			else if(_listcontrol.now_folder == "t") { mailbox = "Trash - ";}
			else { mailbox = _listcontrol.now_folder + " - "; }
			
			if(result.status == "ERROR") {
				Dialog("Error", result.message, {"Close":close});
				return false;
			} else {
				var rs = result;
				var del_btn = "Delete To Trash";
				if(_listcontrol.now_folder == 't') {  del_btn = "Delete Permanently"; }
				var button_obj = {
					"Close": function(cmd, size, id) {
						destroyChildDialog();
						updateMessageList(result.new_message);
					}
				};
				if(_listcontrol.now_folder == "i") {
					button_obj["Reply"] = function(cmd, size, id) {
						destroyChildDialog();
						composeMessage(result.from_user_id, "Re: " + result.subject)
					}
				}
				
				if(_listcontrol.now_folder == "t") {
					button_obj["Put Back"] = function() {
						destroyChildDialog();
						msgPutBack([{"id":msg_id[0]}]);
					}
					button_obj["Delete Permanently"] = function() {
						Dialog(
							"Confirmation",
							"<strong>Are you sure to delete the selected message permanently?</strong><br/><br/>This cannot be undone.",
							{
								"Delete": function() {
									destroyDialog();
									destroyChildDialog();
									msgMovetoDeleted([{"id":msg_id[0]}]);
								}, 
								"Cancel": close
							}
						);
					}
				} else {
					button_obj["Delete to Trash"] = function() {
						destroyChildDialog();
						msgMovetoTrash([{"id":msg_id[0]}]);
					}
				}
			
				if (result.rt == "T") {
					button_obj["Open Requested Item"] = function() {
						var url = "../" + rs.mod + "/form.php?m=view&id=" + rs.rid + "&r=" +rs.rrev + "&l=" + rs.rlang;
						window.location.replace(url);
					}
				}
				childDialog(mailbox + result.subject, result.body, button_obj, 650);				
				return false;
			}
		}
	});
}

function updateMessageList(new_message) {
	if(new_message > 0) {
		$("body .header_top .shortcut_link a.icon_msg").addClass('alert');
	} else {
		$("body .header_top .shortcut_link a.icon_msg").removeClass('alert');
	}
	loadList("list_data");
}

function loadListSuccess(obj) {
	// prepare field before drawTable (put the custom code here)
	return obj;
}

function getMultiSelectedList(){
	var selected_list = new Array();
	var tmpCheck = getItemChecked();

	for (var key in tmpCheck) {
		if (tmpCheck.hasOwnProperty(key)) {
			var ref_arr = tmpCheck[key].split(":");
			var obj = new Object();
			obj["id"] = ref_arr[0];
			obj["rev"] = ref_arr[1];
			obj["lang"] = ref_arr[2];
			obj["state"] = ref_arr[4]; 
			selected_list.push(obj);
		}
	}
	return selected_list;
}

function contextAction(action, el){
	var ref_arr = $(el).attr('ref').split(':');
	if(action == "checkall") {
		$(el).parent().find('tr').addClass("checked")
		.find('.choose input').attr('checked',true);
		updateItemChecked("check");
	} else if(action == "uncheckall") {
		$(el).parent().find('tr').removeClass("checked")
		.find('.choose input').attr('checked',false);
		updateItemChecked("uncheck");
	} else if(action == "open") {
		_listcontrol.customMouseClickItem(el);
	} else if(action == "reply") {
		drawLoadingFullPage();
		var err = "Unable to reply the message. Please contact your system administrator to solve the problem.";
		$.ajax({
			url: 'msg_data.php',
			data: {'c':'detail', 'i':ref_arr[0] },
			type: 'POST', dataType: 'json', timeout: 10000, cache: false,
			error: function(){
				destroyLoadingFullPage();
				Dialog("Error", err, {"Close":close});
				return false;
			},
	
			success: function(result) {
				composeMessage(result.from_user_id, "Re: " + result.subject);
			}
		});

	} else if(action == "delete") {
		if(_listcontrol.now_folder == "t") {
			Dialog("Confirmation","<strong>Are you sure to delete the selected message permanently?</strong><br/><br/>This cannot be undone.",{"Delete":function(){ destroyDialog(); msgMovetoDeleted(getMultiSelectedList()); }, "Cancel":close});
		} else {
			msgMovetoTrash(getMultiSelectedList());
		}
	} else if(action == "putback") {
		msgPutBack(getMultiSelectedList());
	} else if(action == "markasunread") {
		msgMarkAs(getMultiSelectedList(),"unread");
	} else if(action == "markasread") {	
		msgMarkAs(getMultiSelectedList(),"read");
	} else {
	}
	return false;
}

function contextMenuPopup(menu, el, num_row, num_checked_row) {
	if(num_checked_row > 1) { // multi selected
		var suffix_command = " " + num_checked_row + " Items...";
		$(menu).find('li.open').addClass('hide');
		$(menu).find('li.reply').addClass('hide');

		if(_listcontrol.now_folder == "t") {
			$(menu).find('li.delete a').html("Delete " + num_checked_row + " Items...");
			$(menu).find('li.putback').removeClass('hide');
			$(menu).find('li.putback a').html("Put " + num_checked_row + " Items Back");
		} else {
			$(menu).find('li.putback').addClass('hide');
			$(menu).find('li.delete a').html("Delete " + num_checked_row + " to Trash");
		}
		$(menu).find('li.reply').addClass('hide');
	} else {
		$(menu).find('li.open').removeClass('hide');
		if(_listcontrol.now_folder == "i") {
			$(menu).find('li.reply').removeClass('hide');
		} else {
			$(menu).find('li.reply').addClass('hide');
		}
		if(_listcontrol.now_folder == "t") {
			$(menu).find('li.putback').removeClass('hide');
			$(menu).find('li.putback a').html('Put Back');
			$(menu).find('li.delete a').html("Delete Permanently...");
		} else {
			$(menu).find('li.putback').addClass('hide');
			$(menu).find('li.delete a').html("Delete to Trash");
		}
		$(menu).find('li.reply').removeClass('hide');
	}
	return true;
}
var LAST_VALIDATE_COMPOSE_MESSAGE = "";
function validateComposeMessage() {
	var is_valid = true;
	LAST_VALIDATE_COMPOSE_MESSAGE = "";
	if($("#composeToUserId").val() == "") { 
		LAST_VALIDATE_COMPOSE_MESSAGE += "<li>Please specific the \"To\".</li>";
		is_valid = false; 
	}
	if($("#composeSubject").val() == "") { 
		LAST_VALIDATE_COMPOSE_MESSAGE += "<li>Please specific the \"Subject\".</li>";
		is_valid = false; 
	}
	if($("#composeMessage").val() == "") { 
		LAST_VALIDATE_COMPOSE_MESSAGE += "<li>Please specific the \"Message\".</li>";
		is_valid = false; 
	}
	if (LAST_VALIDATE_COMPOSE_MESSAGE != "") {
		LAST_VALIDATE_COMPOSE_MESSAGE = "<ul style=\"list-style:none;\">" + LAST_VALIDATE_COMPOSE_MESSAGE + "</ul>";
	}
	return is_valid;
}

function composeMessage(to_user_id, subject) {
	var err = "Unable to compose the new message. Please contact your system administrator to solve the problem.";
	drawLoadingFullPage();
	var dialog_header;
	if(subject != undefined) {
		dialog_header = "Reply Message";
	} else {
		dialog_header = "Compose new Message";
	}
		
	$.ajax({
		url: 'list_cmd.php',
		data: {'c':'getComposeForm', 'to':to_user_id, 'sj':subject},
		type: 'POST', cache: false, timeout: 10000,
		dataType: 'json',
		error: function(){
			destroyLoadingFullPage();
			Dialog("Error",err,{"OK":close});
			return false;
		},
		success: function(result){
			destroyLoadingFullPage();
			if(result.c == "OK"){
				childDialog(
					dialog_header, 
					result.compose_form,
					{
						"Send":function() {
							if(validateComposeMessage()) {
								var to = $("#composeToUserId").val();
								var sj = $("#composeSubject").val();
								var msg = $("#composeMessage").val();
								destroyChildDialog();
								drawLoadingFullPage();
								$.ajax({
									url: 'list_cmd.php',
									data: {'c':'sendMessage', 'to':to, 'sj':sj, 'msg':msg },
									type: 'POST', cache: false, timeout: 10000,
									dataType: 'json',
									error: function(){
										destroyLoadingFullPage();
										Dialog("Error",err,{"OK":close});
										return false;
									},
									success: function(result){
										destroyLoadingFullPage();
										updateMessageList(result.new_message);
									}
								});
								
							} else {
								Dialog("Error", LAST_VALIDATE_COMPOSE_MESSAGE, {"OK":close});
							}
						},
						"Cancel":function(){
							if($("#composeToUserId").val() != "" || $("#composeSubject").val() != "" || $("#composeMessage").val() != "") {
								Dialog(
									"Confirmation",
									"<strong>Are you sure to cancel and discard all changes?</strong><br /><br />This message has not been sent and contains some changes.",
									{
										"Cancel and Discard change": function() {
											destroyDialog();
											destroyChildDialog();
										},
										"Back to Compose": close
									}
								);
							} else {
								destroyChildDialog();
							}
						}
					},
					650
				);
			} else if(result.e == "SESSION_TIMEOUT") {
				Redirect(_redirect_timeout);
			} else if(result.e == "PERMISSION_DENIED") {
				Redirect(result.url);
			} else {
				Dialog("Error", err, {"OK":close});
			}
			return false;
		}
	});
}

function msgPutBack(msg_list) {
	msgMove(msg_list,"Unable to put the message back. Please contact your system administrator to solve the problem.", "putback");
}

function msgMovetoTrash(msg_list) {
	msgMove(msg_list,"Unable to move the message to trash. Please contact your system administrator to solve the problem.", "movetotrash");
}
function msgMovetoDeleted(msg_list) {
	msgMove(msg_list,"Unable to delete the message permanently. Please contact your system administrator to solve the problem.", "movetodeleted");
}

function msgMove(msg_list, err_msg, command) {
	drawLoadingFullPage();
	var msg_list_str = "";
	var i;
	for(i = 0; i < msg_list.length; i++){
		if(msg_list_str != "") msg_list_str += ",";
		msg_list_str += msg_list[i]["id"];
	}
	$.ajax({
		url: 'msg_data.php',
		data: {'c':command, 'l':msg_list_str },
		type: 'POST', dataType: 'json', timeout: 10000, cache: false,
		error: function(){
			destroyLoadingFullPage();
			Dialog("Error", err_msg, {"Close":close});
			return false;
		},

		success: function(result){
			destroyLoadingFullPage();
			if(result.status == "ERROR") {
				Dialog("Error", result.message, {"Close":close});
				return false;
			} else {
				updateMessageList(result.new_message);
			}
		}
	});
}

function msgMarkAs(msg_list,read_flag) {
	drawLoadingFullPage();
	var err = "Unable to mark the message as read. Please contact your system administrator to solve the problem.";
	var msg_list_str = "";
	var i;
	if(read_flag != 'read') { read_flag = 'unread'; }
	for(i = 0; i < msg_list.length; i++) {
		if(msg_list_str != "") msg_list_str += ",";
		msg_list_str += msg_list[i]["id"];
	}
	$.ajax({
		url: 'msg_data.php',
		data: {'c':'markas', 'l':msg_list_str, 'f':read_flag },
		type: 'POST', dataType: 'json', timeout: 10000, cache: false,
		error: function(){
			destroyLoadingFullPage();
			Dialog("Error", err, {"Close":close});
			return false;
		},

		success: function(result){
			destroyLoadingFullPage();
			if(result.status == "ERROR") {
				Dialog("Error", result.message, {"Close":close});
				return false;
			} else {
				updateMessageList(result.new_message);
			}		
		}
	});
}